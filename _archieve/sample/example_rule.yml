## A DLP rule contains fine grained conditions that apply to a given policy and
## actions to be taken when the conditions are satisfied
rule:
  - name: HighConfidenceRule
    policy: TestPol3
    description: This is a test of yaml schema for DLP rules
    state: enable
    conditions: # can extend to contain new condition types
      operator: and #and/or; applies to top level clauses
      content: # -ContentContainsSensitiveInformation; translates into a single clause with multiple subconditions
        operator: and # and/or; applies to groups
        groups:
        - name: "Exchange - PII Group" ## Group Name
          operator: and # and/or; applies to clauses within group
          type: # supports multiple info types
          - name: "U.S. Social Security Number (SSN)" # sensitive info type name; assume min count = 1
            confidence: High
          - name: "All Full Names"
            confidence: Medium
          # trainable-classifier: no support in PowerShell??
          labels: # sensitivity labels
            - Public
            - Private
          ## ....
        - name: "Exchange - Name"
          operator: and # and/or 
          type: 
          - name: "U.S. Social Security Number (SSN)" # assume min count = 1
            confidence: High
          - name: "All Full Names"
            confidence: Medium
          labels:
            - Public
            - Private
          ## ....
      extension: # -ContentExtensionMatchesWords
        - png
        - pdf
        ## ...
      email: # translates into individual clauses
        subject:
          contains: #-SubjectContainsWords 
          matches: #SubjectMatchesPatterns 
        subjectorbody: # prefer this over subject?
          contains: #SubjectOrBodyContainsWords 
          matches: #SubjectOrBodyMatchesPatterns  
        to:
          contains: # -AnyOfRecipientAddressContainsWords 
          matches: # -AnyOfRecipientAddressMatchesPatterns
          domain: # -RecipientDomainIs
        from: 
          contains: # -FromAddressContainsWords
          matches: # -FromAddressMatchesPatterns
          domain: # -SenderDomainIs 
      scancomplete: #true/false; maps to -ProcessingLimitExceeded
      # messagetype: # valid values match arguments for -MessageTypeMatches
      #  - Encrypted
      #  - Signed
      #  - PermissionControlled
    actions:
      block: # true/false; assume blockaccessscope = all
      email:
        brandingtemplate: # true/false
        disclaimer:
        removeheader:
        enforceportalaccess:
      notify: # An email address; -NotifyUser ; assume always true?
      quarantine: # true/false
      generate:
        alert: # true/false; map to -GenerateAlert <SiteAdmin>?
        report: # true/false; -GenerateIncidentReport
        content: # -IncidentReportContent